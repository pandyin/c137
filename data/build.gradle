import com.c137.buildsrc.Dependencies
import com.c137.buildsrc.Modules
import com.c137.buildsrc.Versions

plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion Versions.AppConfig.compileSdk

    defaultConfig {
        minSdkVersion Versions.AppConfig.minSdk
        targetSdkVersion Versions.AppConfig.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {

    implementation Dependencies.AndroidX.coreKtx
    implementation Dependencies.AndroidX.appcompat

    implementation Dependencies.AndroidX.Room.room
    implementation Dependencies.AndroidX.Room.roomKtx
    kapt Dependencies.AndroidX.Room.roomCompiler

    implementation Dependencies.AndroidX.Paging.paging
    implementation Dependencies.AndroidX.Paging.pagingCompose

    implementation Dependencies.Google.material
    implementation Dependencies.Google.Hilt.hilt
    kapt Dependencies.Google.Hilt.hiltCompiler

    implementation Dependencies.Coroutine.coroutine

    implementation Dependencies.OkHttp.okHttp
    implementation Dependencies.OkHttp.retrofit
    implementation Dependencies.OkHttp.gsonConverter

    testImplementation Dependencies.Test.junit
    testImplementation Dependencies.Test.mockk
    testImplementation Dependencies.Test.assertj
    testImplementation Dependencies.Test.robolectric

    androidTestImplementation Dependencies.Test.extJunit
    androidTestImplementation Dependencies.Test.espressoCore

    implementation project(Modules.common)
    implementation project(Modules.domain)
}